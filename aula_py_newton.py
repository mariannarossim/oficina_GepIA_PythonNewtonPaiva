# -*- coding: utf-8 -*-
"""dev.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1L2PaMAdYeL6ustCVRMGcJMUmgjzNlAiI

Exercício 1: Explorando Operações e Entradas de Usuário

Considere o seguinte conjunto de instruções em Python. Execute cada linha de código e, para cada print, indique qual será a saída produzida. Certifique-se de compreender como as operações matemáticas, concatenação de strings, conversões de tipo e entradas de usuário estão sendo utilizadas. Ao final do código, o usuário é solicitado a fornecer seu nome e nota. O programa então fornece mensagens personalizadas com base na nota inserida. nstruções:

Execute cada linha de código e registre as saídas produzidas. Explique como as operações matemáticas e de string estão sendo aplicadas em cada print. Observe como a conversão de tipo é utilizada para concatenar strings. Experimente inserir seu próprio nome e nota quando solicitado e veja como o programa responde com mensagens personalizadas.

Esse exercício visa consolidar o entendimento de conceitos básicos como operações aritméticas, manipulação de strings, conversões de tipo e interação com o usuário.
"""

print(10 + 4)
print('10' + '4')
print('Michelle quero ' + str(10) + ' pontos')  # Converta 10 para string
print('Michelle quero', 10, 'pontos')

nome = 'mari'
sobrenome = 'linda'
idade = 18
peso = 60.5
print(f'A {nome} {sobrenome} tem {idade} anos e pesa {peso}')

nome = input('Qual seu nome? ')
print('Prazer em te conhecer', nome)

nota = float(input('Qual foi sua nota? '))
if nota > 8:
    print('Parabéns!!!')
elif 6 < nota < 8:
    print('Você pode melhorar!!!')
else:
    print('Estude mais!!!')

"""Exercício 2: Explorando Entradas e Condicionais
Crie um programa em Python que realiza as seguintes tarefas:

a) Receba dois números do usuário e mostre a soma deles.

b) Solicite ao usuário que informe seu dia, mês e ano de nascimento, e então exiba essas informações na tela.

c) Peça ao usuário que forneça seu nome, idade, sobrenome e peso. Em seguida, informe se a pessoa pode votar, tirar carteira, tomar vacina, se é maior de idade e se é considerada idosa (60 anos ou mais).

Instruções:

Execute o programa, fornecendo entradas para os números, data de nascimento, nome, idade, sobrenome e peso.
Observe as mensagens geradas pelo programa com base nas condições especificadas.
Certifique-se de entender como as variáveis e as estruturas condicionais foram utilizadas para tomar decisões com base nas informações fornecidas pelo usuário.
"""

num1 = float(input("Digite o primeiro número: "))
num2 = float(input("Digite o segundo número: "))
soma = num1 + num2
print(f"A soma dos números é: {soma}")

data_nascimento = input("Digite sua data de nascimento (DD/MM/AAAA): ")
dia, mes, ano = map(int, data_nascimento.split('/'))
print(f"Você nasceu em {dia}/{mes}/{ano}")

nome = input("Digite seu nome: ")
idade = int(input("Digite sua idade: "))
sobrenome = input("Digite seu sobrenome: ")
peso = float(input("Digite seu peso: "))

print(f"Olá {nome} {sobrenome}!")
if idade >= 18:
    print("Você pode votar.")
    print("Você pode tirar carteira de motorista.")
    print("Você pode tomar vacina.")
else:
    print("Você não pode votar.")
    print("Você não pode tirar carteira de motorista.")
    print("Você não pode tomar vacina.")

if idade >= 60:
    print("Você é considerado idoso.")

"""
Exercício 3: Explorando Operadores Aritméticos e Identificação de Float

Crie um programa em Python que realiza operações aritméticas com dois números e exibe os resultados. Além disso, o programa deve verificar se o resultado da divisão é um número do tipo float.

Instruções: Execute o programa e observe os resultados das operações aritméticas. Verifique se a mensagem indicando se o resultado da divisão é um número do tipo float está correta. Experimente alterar os valores de a e b para explorar diferentes casos. Entenda como o operador isinstance() é utilizado para verificar o tipo da variável.


Crie um programa em Python que realiza operações aritméticas com dois números e exibe os resultados. Além disso, o programa deve verificar se o resultado da divisão é um número do tipo float.

Instruções:
Execute o programa e observe os resultados das operações aritméticas.
    Verifique se a mensagem indicando se o resultado da divisão é um número do tipo float está correta.
    Experimente alterar os valores de a e b para explorar diferentes casos.
    Entenda como o operador isinstance() é utilizado para verificar o tipo da variável."""

# Operadores aritméticos
a = 10
b = 5
soma = a + b
subtracao = a - b
multiplicacao = a * b
divisao = a / b
divisao_inteira = a // b
resto_divisao = a % b
exponenciacao = a ** b

# Verifica se o resultado da divisão é um float
resultado_divisao_eh_float = isinstance(divisao, float)

# Exibe os resultados
print(f"Soma: {soma}")
print(f"Subtração: {subtracao}")
print(f"Multiplicação: {multiplicacao}")
print(f"Divisão: {divisao}")
print(f"Divisão Inteira: {divisao_inteira}")
print(f"Resto da Divisão (Módulo): {resto_divisao}")
print(f"Exponenciação: {exponenciacao}")

# Verifica se o resultado da divisão é um float e exibe a mensagem correspondente
if resultado_divisao_eh_float:
    print("O resultado da divisão é um número do tipo float.")
else:
    print("O resultado da divisão não é um número do tipo float.")

"""Exercício 4: Antecessor e Sucessor:

Crie um programa que solicite ao usuário um número e, em seguida, exiba o antecessor e o sucessor desse número.
"""

numero = float(input("Digite um número: "))
antecessor = numero - 1
sucessor = numero + 1
print(f"Antecessor: {antecessor}")
print(f"Sucessor: {sucessor}")

"""Exercício 5:Média de Três Números:

Escreva um script que solicite três números ao usuário e calcule a média deles, exibindo o resultado.
"""

num1 = float(input("Digite o primeiro número: "))
num2 = float(input("Digite o segundo número: "))
num3 = float(input("Digite o terceiro número: "))
media = (num1 + num2 + num3) / 3
print(f"A média dos números é: {media}")

"""Exercício 6: Operações com um Número:

Desenvolva um programa que receba um número do usuário e realize as seguintes operações:
        Calcule o dobro do número.
        Calcule o triplo do número.
        Calcule a metade do número.
        Calcule a raiz quadrada do número.
"""

numero = float(input("Digite um número: "))
dobro = numero * 2
triplo = numero * 3
metade = numero / 2
raiz = numero ** 0.5
print(f"Dobro: {dobro}")
print(f"Triplo: {triplo}")
print(f"Metade: {metade}")
print(f"Raiz quadrada: {raiz}")

"""Exercício 7: Cálculo de Litros de Tinta:

Crie um script que peça ao usuário a altura e largura de uma parede, assim como o rendimento da tinta em metros por litro. Com essas informações, calcule e exiba a quantidade de litros de tinta necessários para pintar a parede.
"""

altura = float(input("Digite a altura da parede em metros: "))
largura = float(input("Digite a largura da parede em metros: "))
rendimento_tinta = float(input("Digite o rendimento da tinta em metros por litro: "))
area_parede = altura * largura
litros_necessarios = area_parede / rendimento_tinta
print(f"Serão necessários {litros_necessarios:.2f} litros de tinta para pintar a parede.")

"""Exercício 8: Desconto em Produto:

Solicite ao usuário o valor de um produto e a porcentagem de desconto desejada. Calcule o valor final do produto após o desconto e exiba o resultado.
"""

valor_produto = float(input("Digite o valor do produto: "))
percentual_desconto = float(input("Digite a porcentagem de desconto: "))
valor_desconto = (percentual_desconto / 100) * valor_produto
valor_final = valor_produto - valor_desconto
print(f"O valor final do produto com desconto é: R${valor_final:.2f}")

"""Exercício 9: Condições para Empréstimo:

Peça ao usuário sua renda mensal e o histórico de crédito (perfeito, bom, ruim). Determine se a pessoa está apta para fazer um empréstimo com base nas seguintes condições:
        Histórico perfeito.
        Histórico bom e renda superior a 2000.
        Renda superior a 100000.
"""

renda_mensal = float(input("Digite sua renda mensal: "))
historico_credito = input("Digite o histórico de crédito (perfeito, bom, ruim): ").lower()

if historico_credito == "perfeito" or (historico_credito == "bom" and renda_mensal > 2000) or renda_mensal > 100000:
    print("Você está apto para fazer um empréstimo.")
else:
    print("Você não está apto para fazer um empréstimo.")

"""Exercício 10: Repetição em Python:

Crie um programa que permita ao usuário digitar três números e os exiba. Em seguida, utilize estruturas de repetição para:
        Exibir números de 0 a 2.
        Exibir números de 3 a 9.
        Exibir números de 3 a 9 com incremento de 2.
        Permitir que o usuário digite números até que ele insira o valor 1
"""



"""Exercício 11: Soma de Números até 100:

Modifique o programa anterior para somar os números digitados pelo usuário até que a soma atinja ou ultrapasse 100.
"""



"""Exercício 12: Listas em Python:

  Explore o conceito de listas em Python com os seguintes exemplos:
        Crie uma lista de números inteiros.
        Crie uma lista de strings.
        Crie uma lista vazia.
        Acesse e modifique elementos da lista.
        Adicione e remova elementos da lista.
"""



"""Exercício 13: Manipulação Avançada de Listas:
Realize operações avançadas com listas:
        Exiba todos os valores de uma lista.
        Mostre o tamanho de uma lista.
        Crie uma lista com 10 números, permitindo que o usuário insira números até que ele digite 0 para sair.
        Verifique se um número está presente na lista.
        Preencha uma lista até que o usuário digite 10000.
        Some todos os valores de uma lista.
        Calcule a média de uma lista.
        Encontre o maior elemento de uma lista.
        Mostre o total de elementos de uma lista.
        Inverta a ordem de uma lista.
"""



"""Execício 14: Programa Interativo com Listas:

Desenvolva um programa interativo que permita ao usuário realizar diversas operações com uma lista, como adicionar, remover e verificar elementos únicos até que ele decida encerrar o programa.
"""



"""# SEGUNDA LISTA

Exercício 1: Tamanho de uma Lista

Escreva um programa que utilize a função len para determinar e exibir o tamanho de uma lista de números.
"""



"""Exercício 2: Loop com 10 Números

  Desenvolva um script que permita ao usuário inserir 10 números. O programa deve continuar solicitando números até que o usuário digite 0, momento em que o loop deve ser interrompido. Exiba os números digitados.
"""



"""Exercício 3: Verificação de Existência na Lista

  Crie um programa que peça ao usuário para inserir um número. Verifique se esse número está presente em uma lista predefinida e informe o resultado.
"""



"""Exercício 4: Preenchimento de Lista até 10000

  Elabore um script que permita ao usuário preencher uma lista com números até que ele insira o valor 10000. Exiba os números digitados.
"""



"""Exercício 5: Soma dos Valores de uma Lista

  Escreva um programa que utilize a função sum para calcular e exibir a soma de todos os valores em uma lista.
"""



"""Exercício 6: Média dos Valores de uma Lista

  Crie um script que calcule a média dos valores de uma lista de números e a exiba.
"""



"""Exercício 7: Maior Elemento de uma Lista

  Desenvolva um programa que utilize a função max para determinar e mostrar o maior elemento presente em uma lista.
"""



"""Exercício 8: Total de Elementos de uma Lista

  Escreva um script que utilize a função len para calcular e exibir o total de elementos presentes em uma lista.
"""



"""Exercício 9: Inversão da Ordem de uma Lista

  Crie um programa que inverta a ordem dos elementos em uma lista e exiba o resultado.
"""



"""Exercício 10: Verificação de Presença em Lista (com saída)

  Elabore um programa que solicite ao usuário um número e verifique se ele está presente em uma lista predefinida. O programa deve continuar pedindo números até que o usuário insira "0" para sair.
"""



"""Exercício 11: Remoção de Elementos Específicos em Lista

  Desenvolva um script que permita ao usuário remover elementos específicos de uma lista até que ele decida encerrar o processo. Exiba a lista final.
"""



"""Exercício 12: Adição de Elementos Únicos em Lista

  Crie um programa que permita ao usuário adicionar elementos a uma lista, garantindo que esses elementos sejam únicos (não duplicados). O programa deve continuar pedindo números até que o usuário insira "0" para parar. Exiba a lista final.
"""

